### cmd test

r = Os.cmd("echo Hello Drax")

assert(r == "Hello Drax\n", "os error: invalid return")

### cmd with status test

r = Os.cmd_with_status("echo Hello Drax")

assert(List.at(r, 0) == 0, "os error: invalid return")

assert(List.at(r, 1) == "Hello Drax\n", "os error: invalid return")

r = Os.cmd_with_status("foo_bar")

assert(List.at(r, 0) == 127, "os error: invalid return (foo_bar)")

assert(List.at(r, 1) == "", "os error: invalid return (foo_bar)")

### env var test

r = Os.get_env("MODE")

assert(r == "test", "os error: fail to get MODE env")

r = Os.get_env("_NOME_TEST")

assert(r == nil, "os error: unspected env val on os")

### exit

expect = Os.cmd_with_status("./bin/drax ./tests/os_exit.dx")

assert(List.at(expect, 0) == 42, "os error: invalid return (exit)")

### call module inside function

fun get_env_in_fn() do
    v = Os.get_env("MODE")
    assert(v == "test", "os error: fail to get MODE env inside wrapper")
end

fun wrapper() do get_env_in_fn() end

wrapper()
