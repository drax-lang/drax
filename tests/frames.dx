f = {name: "drax"}

assert(f.name == "drax", "frame error: invalid name in field")

assert(f.foo == nil, "frame error: invalid name in field")

fun get_full_name(f) do
    f.first ++ " " ++ f.last
end

v = get_full_name({first: "drax", last: "lang"})

assert(v == "drax lang", "frame error: get field by function")

fun get_frame() do
    {
        name: "drax",
        sub: {
            key: "lang"
        }
    }
end

assert(get_frame().name == "drax", "frame error: get field by function")

assert(get_frame().sub.key == "lang", "frame error: get field by function")

### test get frames in local scope

fun another_function_test(config) do end

fun test_handle_frame() do
    config = { user: "user", pass: "pass" }
    another_function_test(config)
    auth = config.user ++ ":" ++ config.pass
end

test_handle_frame()

### test module frame

ff = {name: "drax"}
ff = frame.put(ff, "name", "foo")

assert(ff.name == "foo", "frame error: put field foo 1")

ff = frame.put(ff, "name2", "drax")

assert(ff.name == "foo", "frame error: put field foo 2")
assert(ff.name2 == "drax", "frame error: put field drax")

print("Frames done!")
