large_frame = {
  a1: 87,
  b2: [1, 2, 3],
  c3: "Olá",
  d4: 12.34,
  e5: true,
  f6: { x: 1, y: 2 },
  g7: nil,
  h8: 67,
  i9: ["a", "b", "c"],
  j10: "Mundo",
  k11: 53,
  l12: [7, 8, 9],
  m13: "Teste",
  n14: 45.67,
  o15: false,
  p16: { name: "John", age: 30 },
  q17: nil,
  r18: 23,
  s19: ["x", "y", "z"],
  t20: "Texto",
  u21: 100,
  v22: [4, 5, 6],
  w23: "Exemplo",
  x24: 78.9,
  y25: true,
  z26: { a: 10, b: 20 },
  a27: nil,
  b28: 32,
  c29: ["1", "2", "3"],
  d30: "Mensagem",
  e31: 43,
  f33: [10, 11, 12],
  g33: "Olá Mundo",
  h34: 56.78,
  i35: false,
  j36: { id: 123, value: 456 },
  k37: nil,
  l38: 91,
  m39: ["A", "B", "C"],
  n40: "Fim",
  o41: 34,
  p42: [13, 14, 15],
  q43: "Teste de String",
  r44: 89.0,
  s45: true,
  t46: { p: 3.14, q: 2.71 },
  u47: nil,
  v48: 77,
  w49: ["Q", "R", "S"],
  x50: "Final",
  a1: 87,
  b2: [1, 2, 3],
  c3: "Olá",
  d4: 12.34,
  e5: true,
  f6: { x: 1, y: 2 },
  g7: nil,
  h8: 67,
  i9: ["a", "b", "c"],
  j10: "Mundo",
  k11: 53,
  l12: [7, 8, 9],
  m13: "Teste",
  n14: 45.67,
  o15: false,
  p16: { name: "John", age: 30 },
  q17: nil,
  r18: 23,
  s19: ["x", "y", "z"],
  t20: "Texto",
  u21: 100,
  v22: [4, 5, 6],
  w23: "Exemplo",
  x24: 78.9,
  y25: true,
  z26: { a: 10, b: 20 },
  a27: nil,
  b28: 32,
  c29: ["1", "2", "3"],
  d30: "Mensagem",
  e31: 43,
  f33: [10, 11, 12],
  g33: "Olá Mundo",
  h34: 56.78,
  i35: false,
  j36: { id: 123, value: 456 },
  k37: nil,
  l38: 91,
  m39: ["A", "B", "C"],
  n40: "Fim",
  o41: 34,
  p42: [13, 14, 15],
  q43: "Teste de String",
  r44: 89.0,
  s45: true,
  t46: { p: 3.14, q: 2.71 },
  u47: nil,
  v48: 77,
  w49: ["Q", "R", "S"],
  x50: "Final",
  y51: 23.45,
  z52: false,
  a53: { lat: 40.7128, long: -74.0060 },
  b54: nil,
  c55: 29,
  d56: ["dog", "cat", "fish"],
  e57: "Nova York",
  f58: 81,
  g59: [16, 17, 18],
  h60: "Teste de Código",
  i61: 98.76,
  j62: true,
  k63: { r: 5, g: 10, b: 15 },
  l64: nil,
  m65: 52,
  n66: ["L", "M", "N"],
  o67: "JSON",
  p68: 65,
  q69: [19, 20, 21],
  r70: "Exemplo de JSON",
  s71: 102.34,
  t72: false,
  u73: { width: 100, height: 200 },
  v74: nil,
  w75: 45,
  x76: ["X", "Y", "Z"],
  y77: "Chave Final",
  z78: 87.65,
  a79: true,
  b80: { a: 1, b: 2 },
  c81: nil,
  d82: 63,
  e83: ["D", "E", "F"],
  f84: "Texto Final",
  g85: 33,
  h86: [22, 23, 24],
  i87: "Final do Exemplo",
  j88: 111.22,
  k89: false,
  l90: { pi: 3.1415, e: 2.718 },
  m91: nil,
  n92: 77,
  o93: ["AA", "BB", "CC"],
  p94: "String Final",
  q95: 49,
  r96: [25, 26, 27],
  s97: "Fim do Exemplo",
  t98: 120.45,
  u99: true,
  v100: { x1: 5, y1: 10 },
  key1_long_name_value: 987,
  key2_array_of_integers: [1, 3, 5, 7, 9],
  key3_simple_string_text: "Hello World",
  key4_float_number_value: 98.76,
  key5_boolean_true_value: true,
  key6_nested_object_structure: { a: 100, b: 200 },
  key7_large_integer_value: 123456789,
  key8_array_of_strings: ["apple", "banana", "cherry"],
  key9_greeting_message: "Welcome to JSON",
  key10_complex_object_value: { name: "Test", data: [1, 2, 3] },
  key11_random_boolean_false: false,
  key12_large_float_number: 345.6789,
  key13_mixed_type_array: [42, "Answer", true, 3.14],
  key14_another_simple_string: "Goodbye",
  key15_sequence_of_numbers: [10, 20, 30, 40],
  key16_object_with_numbers: { x: 5, y: 10, z: 15 },
  key17_another_boolean_true: true,
  key18_random_string_value: "Random Text",
  key19_large_integer_value_2: 987654321,
  key20_array_with_floats: [2.71, 3.14, 1.618],
  key21_description_text_here: "This is a test JSON object",
  key22_array_of_booleans: [false, true, false],
  key23_float_with_precision: 123.456789,
  key24_integer_sequence: [100, 200, 300, 400],
  key25_object_with_strings: { first: "John", last: "Doe" },
  key26_boolean_flag_false: false,
  key27_large_integer_value_3: 1122334455,
  key28_complex_structure: { id: 789, values: [10, 20, 30] },
  key29_array_of_mixed_types: [99, "Ninety-Nine", false],
  key30_sample_text_string: "Sample Text",
  key31_floating_point_number: 432.10,
  key32_boolean_flag_true: true,
  key33_key_with_large_number: 9988776655,
  key34_list_of_strings: ["one", "two", "three"],
  key35_object_with_floats: { pi: 3.1415, e: 2.718 },
  key36_large_number_value: 123123123,
  key37_array_with_strings: ["X", "Y", "Z"],
  key38_greeting_message_2: "Hello Again",
  key39_complex_object_structure_2: { a: 1000, b: 2000 },
  key40_array_of_integers_2: [3, 6, 9],
  key41_simple_boolean_true: true,
  key42_nested_object_example: { alpha: 1, beta: 2 },
  key43_float_value_2: 765.4321,
  key44_array_of_mixed_values: [false, 123, "End"],
  key45_string_value_final: "Final String",
  key46_integer_value_example: 7890,
  key47_object_with_flags: { isActive: true, isVerified: false },
  key48_large_float_number_2: 567.8901,
  key49_simple_string_message: "Final Message",
  key50_mixed_type_structure: { x: 10, y: "Ten", z: false },
  key51_large_integer_value_4: 2233445566,
  key52_float_value_with_precision: 654.321,
  key53_boolean_flag_example: true,
  key54_array_with_floats_2: [1.234, 5.678, 9.1011],
  key55_textual_description: "This is an example",
  key56_object_with_data: { keyA: "A", keyB: "B", keyC: "C" },
  key57_array_with_integers_3: [8, 16, 32],
  key58_random_large_number: 3344556677,
  key59_float_number_value_3: 210.9876,
  key60_object_with_booleans: { truthy: true, falsy: false },
  key61_large_integer_value_5: 4455667788,
  key62_simple_string_value: "Just a String",
  key63_array_with_mixed_types_2: [7, "Seven", true],
  key64_sample_float_value: 890.1234,
  key65_random_boolean_value: false,
  key66_complex_object_with_data: { id: 321, label: "Item" },
  key67_large_integer_value_6: 9988776655,
  key68_text_value_example: "Example Text",
  key69_list_of_numbers: [1, 4, 7, 10],
  key70_object_with_floats_2: { min: 0.1, max: 10.1 },
  key71_boolean_true_value_example: true,
  key72_large_integer_example: 87654321,
  key73_string_message_sample: "Sample Message",
  key74_array_with_strings_2: ["alpha", "beta", "gamma"],
  key75_object_with_large_numbers: { numberA: 1000000, numberB: 2000000 },
  key76_random_float_value: 345.1234,
  key77_text_value_here: "Hello JSON",
  key78_integer_value_final: 4321,
  key79_array_of_integers_4: [11, 22, 33, 44],
  key80_nested_object_example_2: { key1: 101, key2: 202 },
  key81_boolean_true_value_final: true,
  key82_large_float_value_final: 654.7890,
  key83_string_text_final: "Last String",
  key84_complex_structure_final: { param1: 50, param2: 100 },
  key85_integer_value_sample: 9876,
  key86_array_of_mixed_data: [false, "False", 0],
  key87_large_number_value_final: 12121212,
  key88_simple_float_value: 123.45,
  key89_text_value_final: "Final Text Value",
  key90_boolean_false_value_final: false,
  key91_complex_object_final: { id: 999, status: "Active" },
  key92_large_integer_final_value: 654321,
  key93_array_with_floats_3: [9.876, 5.432, 1.234],
  key94_string_final_example: "End of JSON",
  key95_mixed_type_array_final: [10, "Ten", true],
  key96_random_large_float: 987.6543,
  key97_simple_boolean_false: false,
  key98_object_with_integers: { count1: 10, count2: 20 },
  key99_large_float_value_example: 876.5432,
  key100_text_message_example: "Final Example",
  jqXw9ZQkHn: 42,
  ZtK7vLoMbG: [3.14, 2.718, 1.618],
  b4R5uTnVcP: "Random String",
  x7y2zW8tQ3: [false, true, false],
  pF3kT6wL1j: { x: 100, y: 200 },
  vH9qLzM7Xk: 987654321,
  W2mN3lJ4vY: ["alpha", "beta", "gamma"],
  g8J4kR2hX5: "Another String",
  nY3pQ9lF6t: 123.456,
  j3K6bT7zQ8: [1, 2, 3, 4, 5],
  Q1nW8eL7jR: { a: true, b: false },
  T9zQ4mX6cV: "Hello World",
  Z8kR2fM5nL: 4321,
  L3yW5uP7xH: [99, 88, 77],
  vG9tY2nQ4z: 654.321,
  K7jQ5mL8nR: { id: 999, value: "test" },
  H6vN3tX4jL: true,
  n9L8kR6yJ5: [10, 20, 30],
  Y2mQ4vZ7kP: 345.678,
  t1P6jW3rQ9: { key: "value", data: [1, 2, 3] },
  P4nV8zL6tM: "Sample Text",
  W7jQ2mR5nL: 987.654,
  L6tX9pQ4rN: { alpha: "A", beta: "B" },
  X8rM3yN5tP: [false, "true", 123],
  y7L4kQ6zW9: "JSON Example",
  q1W9rT3mP6: 87654321,
  N2tP4lV6kX: [5, 10, 15],
  R8mL5jQ2yW: { count: 10, total: 100 },
  v9Z2pT4kL6: "Another Example",
  x1N8rQ6tM5: 345.123,
  J3lP7vR9nX: [0.1, 0.2, 0.3],
  M4nT9yL6pR: "Test String",
  K6zQ3rN5vL: { truth: true, lie: false },
  q8L2pT7xN5: 999999,
  T9jQ4mR2lV: [42, "Answer", true],
  Y7lP5vX3nK: "Final Message",
  L8rQ2nT9mP: 102.345,
  p3J6vR7tX4: { key1: "A", key2: "B" },
  X5kR8lQ4nJ: 7890,
  R3nT6vP9mL: "End of JSON",
  k4N9jQ2xW7: [7, 14, 21],
  n6P8vT5kL3: { item: 123, label: "item" },
  G9zQ4mN2yL: 567.89,
  V7tX5pR9kN: "Example Value",
  m8L3jP6vR4: { first: "John", last: "Doe" },
  Q2rN7lT5xK: 112233,
  p9J4kX3rT6: [3.14, "pi", false],
  z1L8qT6vN3: "Complex JSON",
  W6nT3jL9pR: 234567,
  r2P5vX8lT7: { nested: { a: 1, b: 2 } },
  j9L4qR2tN5: 789.123,
  X7pM6vT4nK: "Sample Key",
  V2lP9xT3rN: 345678,
  m6N3qL7tP4: { id: 10, active: true },
  K8rL5tQ9mX: [10, 20, 30, 40],
  R9vP6mT4nL: "Another Key",
  z2N4qL8tX3: 654321,
  n5L9rQ2mT7: { level: 1, score: 100 },
  P7xM6vT3nL: 876.543,
  r3J8lQ5tN6: "Final Example",
  N4vP2mR9lK: [11, 22, 33],
  j8L3tQ6nX5: { a: true, b: false, c: true },
  Q5nX7pR9mL: 567890,
  X2rM6vT4jN: "Test Message",
  k7N9lQ4tP3: { alpha: "A", beta: "B", gamma: "C" },
  v4L2qP5nX6: 765.432,
  T3rP8mL7kN: [8, 16, 24, 32],
  y9N5lQ2tW4: "Complex Object",
  n3J6rX7vT2: { id: 555, status: "active" },
  X9kL4qT5nP: 321.987,
  P6vM8rT3lK: "Final String",
  R7nL5tQ4mX: [5.432, 1.234, 9.876],
  j2P8kT6nL9: { x: 10, y: 20, z: 30 },
  N9rL3qX5tV: 234.567,
  X4vT2mP7nK: "Another String",
  r5L9kQ6tM3: [15, 25, 35],
  V6nX4tP2lN: { count: 100, total: 1000 },
  y8L7qR3nT6: 999.888,
  N3tP9mL4xK: "End of JSON",
  j7L2rQ6vT5: { truthy: true, falsy: false },
  P5xM4nT3lK: 87654321,
  R4nL9tQ2mX: "Another Key",
  z9L5qP3tN7: [101, 202, 303],
  n2P6vX7lT4: { alpha: "A", beta: "B", gamma: "C" },
  X8rL4tQ9mN: 123456,
  T6nP2jL3vK: "Sample JSON",
  r4M7qT5nL8: [11.11, 22.22, 33.33],
  k3N9lQ6tX7: { x: 50, y: 60, z: 70 },
  y2L5rT8nP4: 789012,
  N6vP3lT9xK: "Final Key",
  X3rL9tQ4mN: [13, 26, 39],
  p2J7kT5vL6: { a: 1, b: 2, c: 3 },
  R9nL3qX2tM: 987654,
  X6vP4tN8jL: "Test Key",
  j4L2kQ9tX5: [12, 24, 36],
  n7M3pT6vL9: { count: 20, value: 200 },
  V9rP5lT8nK: 678.901,
  y4N2qR7tP3: "Sample Key",
  r8L3kQ6nT9: { id: 101, status: "done" },
  Q1mR8pT3nV5x: [25, 50, 75],
  L6jQ2lW7kP9z: "Some Random String",
  K9pN4tX8vR3l: 123456789,
  X3vQ5mN9tL2p: { name: "John", age: 30 },
  N7lT2pR6kM4v: [true, false, true],
  z4M9rT5nX3L2: 456.789,
  j6K7qL3tV8nP: "Another Random String",
  P5xT4nR2kL9v: { height: 180, weight: 75 },
  V8lM3pN6tR7x: [10.1, 20.2, 30.3],
  y3L6qT9nP5vR: 789012345,
  k2N8rX7tM4pL: "Yet Another String",
  R4mP5vL9tN2x: { score: 95, grade: "A" },
  T9pL6tX3nV2k: [5, 10, 15],
  X7qM8rN4tL6p: 654321987,
  n5K2pT9vR7lM: { x: 3, y: 6, z: 9 },
  V4lN3qT5nP8x: [1.1, 2.2, 3.3],
  z9P6mT7rX4L3: "Another Example String",
  Q2mN5pL8tR9x: 321654987,
  L7jP4tW9kM2v: { alpha: "X", beta: "Y", gamma: "Z" },
  K3pN6tX2vR8l: 987654321,
  X9vQ7mN5tL4p: { key: "value", id: 789 },
  N4lT9pR3kM6v: [true, false, true, false],
  z3M8rT6nX7L4: 123.456,
  j9K5qL2tV7nP: "String Value Example",
  P2xT7nR4kL9v: { width: 1920, height: 1080 },
  V5lM9pN3tR6x: [100, 200, 300],
  y6L7qT8nP2vR: 456789123,
  k8N3rX5tM9pL: "Sample String",
  R7mP6vL2tN4x: { name: "Alice", score: 85 },
  T8pL4tX7nV6k: [20.20, 40.40, 60.60],
  X2qM9rN6tL3p: 321987654,
  n7K4pT3vR8lM: { year: 2024, month: "August" },
  V6lN8qT9nP5x: [15, 30, 45],
  z5P3mT2rX9L8: "Another Random String Value",
  Q4mN7pL6tR2x: 654789321,
  L8jP9tW3kM7v: { product: "Laptop", price: 1500 },
  K5pN2tX4vR9l: 987321654,
  X6vQ3mN8tL7p: { id: 456, status: "active" },
  N3lT4pR7kM2v: [true, false, true, true],
  z7M2rT9nX5L6: 234.567,
  j4K9qL6tV2nP: "Different String Value",
  P9xT3nR8kL7v: { resolution: "4K", fps: 60 },
  V3lM5pN9tR2x: [150, 300, 450],
  y8L2qT7nP6vR: 987123456,
  k9N4rX6tM3pL: "Text String Example",
  R9mP2vL8tN6x: { temperature: 25, humidity: 60 },
  T4pL9tX5nV3k: [5.5, 10.10, 15.15],
  X5qM4rN7tL9p: 123789456,
  n8K7pT6vR2lM: { make: "Ford", model: "Mustang" },
  V9lN5qT4nP3x: [2.2, 4.4, 6.6],
  z8P4: -5215.123,
  z8P4mT3rX9L2: "A complex string",
  Q7mN8pL5tR6x: 567891234,
  L2jP3tW8kM9v: { planet: "Earth", continent: "Asia" },
  K6pN7tX9vR4l: 456123789,
  X4vQ2mN5tL8p: { code: 200, message: "OK" },
  N9lT6pR3kM7v: [true, true, false, false],
  z2M5rT8nX3L9: 678.901,
  j8K4qL7tV6nP: "Final Test String",
  P6xT9nR4kL2v: { OS: "Linux", version: "5.15" },
  V7lM2pN4tR9x: [1.01, 2.02, 3.03],
  y5L8qT3nP9vR: 345678912,
  k3N7rX9tM6pL: "More Random Strings",
  R8mP5vL7tN3x: { shape: "circle", color: "blue" },
  T7pL2tX6nV8k: [9, 18, 27],
  X9qM3rN4tL5p: 456789123,
  n4K9pT8vR7lM: { engine: "V8", horsepower: 500 },
  V2lN6qT3nP8x: [8.88, 9.99, 10.10],
  z6P9mT2rX7L5: "Final Complex String",
  Q8mN4pL3tR7x: 567123890,
  L9jP5tW6kM4v: { building: "Skyscraper", floors: 50 },
  K8pN2tX3vR5l: 123654789,
  X7vQ9mN8tL6p: { altitude: 10000, speed: 850 },
  N5lT7pR9kM3v: [true, false, true, false, true],
  z3M6rT4nX2L8: 890.123,
  j7K8qL9tV3nP: "Ultimate Random String",
  P3xT6nR5kL9v: { weight: 70, height: 175 },
  V4lM9pN7tR2x: [12.34, 23.45, 34.56],
  y9L6qT5nP2vR: 789654123,
  k5N3rX4tM8pL: "Another Final String",
  R2mP7vL6tN9x: { memory: "16GB", storage: "512GB" },
  T6pL8tX9nV4k: [33, 66, 99],
  X2qM5rN7tL6p: 234567891,
  n3K9pT4vR8lM: { series: "300", model: "XPS" },
  V5lN7qT9nP4x: [0.123, 0.456, 0.789],
  z7P3mT9rX6L4: "The Last Random String",
  z8P4mT3rX9L2: "A complex string",
  Q7mN8pL5tR6x: 567891234,
  L2jP3tW8kM9v: { planet: "Earth", continent: "Asia" },
  K6pN7tX9vR4l: 456123789,
  X4vQ2mN5tL8p: { code: 200, message: "OK" },
  N9lT6pR3kM7v: [true, true, false, false],
  z2M5rT8nX3L9: 678.901,
  j8K4qL7tV6nP: "Final Test String",
  P6xT9nR4kL2v: { OS: "Linux", version: "5.15" },
  V7lM2pN4tR9x: [1.01, 2.02, 3.03],
  y5L8qT3nP9vR: 345678912,
  k3N7rX9tM6pL: "More Random Strings",
  R8mP5vL7tN3x: { shape: "circle", color: "blue" },
  T7pL2tX6nV8k: [9, 18, 27],
  X9qM3rN4tL5p: 456789123,
  n4K9pT8vR7lM: { engine: "V8", horsepower: 500 },
  V2lN6qT3nP8x: [8.88, 9.99, 10.10],
  z6P9mT2rX7L5: "Final Complex String",
  Q8mN4pL3tR7x: 567123890,
  L9jP5tW6kM4v: { building: "Skyscraper", floors: 50 },
  K8pN2tX3vR5l: 123654789,
  X7vQ9mN8tL6p: { altitude: 10000, speed: 850 },
  N5lT7pR9kM3v: [true, false, true, false, true],
  z3M6rT4nX2L8: 890.123,
  j7K8qL9tV3nP: "Ultimate Random String",
  P3xT6nR5kL9v: { weight: 70, height: 175 },
  V4lM9pN7tR2x: [12.34, 23.45, 34.56],
  y9L6qT5nP2vR: 789654123,
  k5N3rX4tM8pL: "Another Final String",
  R2mP7vL6tN9x: { memory: "16GB", storage: "512GB" },
  T6pL8tX9nV4k: [33, 66, 99],
  X2qM5rN7tL6p: 234567891,
  n3K9pT4vR8lM: { series: "300", model: "XPS" },
  V5lN7qT9nP4x: [0.123, 0.456, 0.789],
  z7P3mT9rX6L4: "The Last Random String",
  A8pQ2mR5nL9x: [15, 30, 45],
  X6vT3kN8lR7p: "Sample Text String",
  B7lM4pQ2tN9x: { color: "red", size: "medium" },
  Y9nK5rL3tX2p: 234567890,
  C4qP8mR7nL6x: [3.14, 2.71, 1.62],
  Z5xT2kN9lR3p: "Another Random Value",
  D6vL4pM2tN7x: { language: "Python", version: "3.10" },
  W7nQ9rL3tX2p: [101, 202, 303],
  E8mT2pR5nL6x: "Random String Example",
  F9lK4qN7tX3p: { city: "New York", population: 8419000 },
  G2vP8mR6nL9x: [10.10, 20.20, 30.30],
  H3nQ5rL2tX7p: "Text with different values",
  I4lM6pT9nR2x: { brand: "Sony", model: "WH-1000XM4" },
  J7vK2pN5tL6x: [0.001, 0.002, 0.003],
  K8pT3mR4nL9x: "Example with unique values",
  L9xQ6rN2tL5p: { type: "SUV", make: "Toyota" },
  M2vL4pT7nR3x: [99, 88, 77],
  N5lK8qP3tX6p: "String with varied length",
  O7mT2pR9nL4x: { degree: "Master's", field: "Computer Science" },
  P9lQ3rN8tX5p: [56.78, 90.12, 34.56],
  Q2vL6pN4tR7x: "Randomly generated text",
  R3nK5pT8lX2p: { server: "Apache", status: "running" },
  S4xQ7rL2nM9x: [777, 888, 999],
  T5vL2pN6tR3x: "Another example string",
  U6pK9mR4nL2x: { planet: "Mars", mission: "Curiosity" },
  V7lT3pN5tX9x: [1, 2, 3, 4, 5],
  W8qL4rM2nX7p: "Variety in text values",
  X9mT2pN6lR3x: { company: "Google", service: "Cloud" },
  Y5nK8qR4tX2p: [333.44, 555.66, 777.88],
  Z6vL3pN9tR5x: "Example with longer text",
  A7pQ8mR2nL4x: { model: "iPhone", version: "13 Pro" },
  B9lT5pN6rX3x: [4.56, 7.89, 1.23],
  C2qL8rN7tX9p: "Textual data example",
  D4vM3pL6nR2x: { country: "Germany", currency: "Euro" },
  E5lT9pN4rX7x: [12, 34, 56, 78],
  F6nK2pR8tL3x: "Complex text string",
  G7mQ4rN5tX2p: { software: "VS Code", license: "MIT" },
  H8lP3nR6tX9x: [0.1, 0.2, 0.3],
  I9vT2pN4lR7x: "More random examples",
  J3nK5rL2tX8p: { book: "1984", author: "George Orwell" },
  K4pL7mN9tR2x: [1000, 2000, 3000],
  L5xT8rN3pX6x: "Extended text string",
  M6qL2nR4tX9p: { game: "Chess", level: "Beginner" },
  N7pT3vL6rX2x: [111.22, 333.44, 555.66],
  O8mQ4rN5tX7x: "Example string with different values",
  P9lT2pR8nX3x: { subject: "Mathematics", grade: "A+" },
  Q4vL6pN9tR2x: [22, 33, 44],
  R5nK7qT8lX9x: "Final example string",
  S6pT2mR4nL3x: { category: "Electronics", item: "Headphones" },
  A8pQ2mR5nL9x: [15, 30, 45],
  X6vT3kN8lR7p: "Sample Text String",
  B7lM4pQ2tN9x: { color: "red", size: "medium" },
  Y9nK5rL3tX2p: 234567890,
  C4qP8mR7nL6x: [3.14, 2.71, 1.62],
  Z5xT2kN9lR3p: "Another Random Value",
  D6vL4pM2tN7x: { language: "Python", version: "3.10" },
  W7nQ9rL3tX2p: [101, 202, 303],
  E8mT2pR5nL6x: "Random String Example",
  F9lK4qN7tX3p: { city: "New York", population: 8419000 },
  G2vP8mR6nL9x: [10.10, 20.20, 30.30],
  H3nQ5rL2tX7p: "Text with different values",
  I4lM6pT9nR2x: { brand: "Sony", model: "WH-1000XM4" },
  J7vK2pN5tL6x: [0.001, 0.002, 0.003],
  K8pT3mR4nL9x: "Example with unique values",
  L9xQ6rN2tL5p: { type: "SUV", make: "Toyota" },
  M2vL4pT7nR3x: [99, 88, 77],
  N5lK8qP3tX6p: "String with varied length",
  O7mT2pR9nL4x: { degree: "Master's", field: "Computer Science" },
  P9lQ3rN8tX5p: [56.78, 90.12, 34.56],
  Q2vL6pN4tR7x: "Randomly generated text",
  R3nK5pT8lX2p: { server: "Apache", status: "running" },
  S4xQ7rL2nM9x: [777, 888, 999],
  T5vL2pN6tR3x: "Another example string",
  U6pK9mR4nL2x: { planet: "Mars", mission: "Curiosity" },
  V7lT3pN5tX9x: [1, 2, 3, 4, 5],
  W8qL4rM2nX7p: "Variety in text values",
  X9mT2pN6lR3x: { company: "Google", service: "Cloud" },
  Y5nK8qR4tX2p: [333.44, 555.66, 777.88],
  Z6vL3pN9tR5x: "Example with longer text",
  A7pQ8mR2nL4x: { model: "iPhone", version: "13 Pro" },
  B9lT5pN6rX3x: [4.56, 7.89, 1.23],
  C2qL8rN7tX9p: "Textual data example",
  D4vM3pL6nR2x: { country: "Germany", currency: "Euro" },
  E5lT9pN4rX7x: [12, 34, 56, 78],
  F6nK2pR8tL3x: "Complex text string",
  G7mQ4rN5tX2p: { software: "VS Code", license: "MIT" },
  H8lP3nR6tX9x: [0.1, 0.2, 0.3],
  I9vT2pN4lR7x: "More random examples",
  J3nK5rL2tX8p: { book: "1984", author: "George Orwell" },
  K4pL7mN9tR2x: [1000, 2000, 3000],
  L5xT8rN3pX6x: "Extended text string",
  M6qL2nR4tX9p: { game: "Chess", level: "Beginner" },
  N7pT3vL6rX2x: [111.22, 333.44, 555.66],
  O8mQ4rN5tX7x: "Example string with different values",
  P9lT2pR8nX3x: { subject: "Mathematics", grade: "A+" },
  Q4vL6pN9tR2x: [22, 33, 44],
  R5nK7qT8lX9x: "Final example string",
  S6pT2mR4nL3x: { category: "Electronics", item: "Headphones" }
}

assert(Frame.is_present(large_frame), "frame error: large frame is empty")
assert(!Frame.is_empty(large_frame), "frame error: large frame is empty")

assert(Frame.get(large_frame, "M2vL4pT7nR3x"), "frame error: the key M2vL4pT7nR3x is invalid")
assert(Frame.get(large_frame, "X6vT3kN8lR7p"), "frame error: the key X6vT3kN8lR7p is invalid")
assert(Frame.get(large_frame, "Y9nK5rL3tX2p"), "frame error: the key Y9nK5rL3tX2p is invalid")
assert(Frame.get(large_frame, "Y2mQ4vZ7kP"), "frame error: the key Y2mQ4vZ7kP is invalid")

assert(!Frame.get(Frame.remove(large_frame, "M2vL4pT7nR3x"), "M2vL4pT7nR3x"), "frame error: the key M2vL4pT7nR3x is invalid")

assert(Frame.get(large_frame, "X6vT3kN8lR7p"), "frame error: the key X6vT3kN8lR7p is invalid")
assert(Frame.get(large_frame, "Y9nK5rL3tX2p"), "frame error: the key Y9nK5rL3tX2p is invalid")
assert(Frame.get(large_frame, "Y2mQ4vZ7kP"), "frame error: the key Y2mQ4vZ7kP is invalid")

mf = {
  a1: "Hello",
  b2: 125,
  c3: 10,
  d4: "12.34",
  e5: false,
  f6: { z: "foo", k: "bar" },
  g7: true,
  h8: 76,
  i9: false,
  j10: 0x111111,
  k11: "Test",
  l12: false,
  m13: {},
  n14: []
}

result = Frame.merge(large_frame, mf)
assert(Frame.get(result, "a1") != Frame.get(large_frame, "a1"), "frame error: the value of key 'a1' was not rewritten")
assert(Frame.get(result, "b2") != Frame.get(large_frame, "b2"), "frame error: the value of key 'b2' was not rewritten")
assert(Frame.get(result, "c3") != Frame.get(large_frame, "c3"), "frame error: the value of key 'c3' was not rewritten")
assert(Frame.get(result, "d4") != Frame.get(large_frame, "d4"), "frame error: the value of key 'd4' was not rewritten")
assert(Frame.get(result, "e5") != Frame.get(large_frame, "e5"), "frame error: the value of key 'e5' was not rewritten")
assert(Frame.get(result, "f6") != Frame.get(large_frame, "f6"), "frame error: the value of key 'f6' was not rewritten")
assert(Frame.get(result, "g7") != Frame.get(large_frame, "f6"), "frame error: the value of key 'g7' was not rewritten")
assert(Frame.get(result, "h8") != Frame.get(large_frame, "f6"), "frame error: the value of key 'h8' was not rewritten")
assert(Frame.get(result, "i9") != Frame.get(large_frame, "f6"), "frame error: the value of key 'i9' was not rewritten")
assert(Frame.get(result, "j10") != Frame.get(large_frame, "f6"), "frame error: the value of key 'j10' was not rewritten")
assert(Frame.get(result, "k11") != Frame.get(large_frame, "f6"), "frame error: the value of key 'k11' was not rewritten")
assert(Frame.get(result, "l12") != Frame.get(large_frame, "f6"), "frame error: the value of key 'l12' was not rewritten")
assert(Frame.get(result, "m13") != Frame.get(large_frame, "f6"), "frame error: the value of key 'm13' was not rewritten")
assert(Frame.get(result, "n14") != Frame.get(large_frame, "f6"), "frame error: the value of key 'n14' was not rewritten")

assert(Frame.merge(result, large_frame) == large_frame, "frame error: the result was overwritten")

klf = ["a1", "b2", "c3", "d4", "e5", "f6", "g7", "h8", "i9", "j10", "k11", "l12", "m13", "n14", "o15", "p16", "q17", "r18", "s19", "t20", "u21", "v22", "w23", "x24", "y25", "z26", "a27", "b28", "c29", "d30", "e31", "f33", "g33", "h34", "i35", "j36", "k37", "l38", "m39", "n40", "o41", "p42", "q43", "r44", "s45", "t46", "u47", "v48", "w49", "x50", "y51", "z52", "a53", "b54", "c55", "d56", "e57", "f58", "g59", "h60", "i61", "j62", "k63", "l64", "m65", "n66", "o67", "p68", "q69", "r70", "s71", "t72", "u73", "v74", "w75", "x76", "y77", "z78", "a79", "b80", "c81", "d82", "e83", "f84", "g85", "h86", "i87", "j88", "k89", "l90", "m91", "n92", "o93", "p94", "q95", "r96", "s97", "t98", "u99", "v100", "key1_long_name_value", "key2_array_of_integers", "key3_simple_string_text", "key4_float_number_value", "key5_boolean_true_value", "key6_nested_object_structure", "key7_large_integer_value", "key8_array_of_strings", "key9_greeting_message", "key10_complex_object_value", "key11_random_boolean_false", "key12_large_float_number", "key13_mixed_type_array", "key14_another_simple_string", "key15_sequence_of_numbers", "key16_object_with_numbers", "key17_another_boolean_true", "key18_random_string_value", "key19_large_integer_value_2", "key20_array_with_floats", "key21_description_text_here", "key22_array_of_booleans", "key23_float_with_precision", "key24_integer_sequence", "key25_object_with_strings", "key26_boolean_flag_false", "key27_large_integer_value_3", "key28_complex_structure", "key29_array_of_mixed_types", "key30_sample_text_string", "key31_floating_point_number", "key32_boolean_flag_true", "key33_key_with_large_number", "key34_list_of_strings", "key35_object_with_floats", "key36_large_number_value", "key37_array_with_strings", "key38_greeting_message_2", "key39_complex_object_structure_2", "key40_array_of_integers_2", "key41_simple_boolean_true", "key42_nested_object_example", "key43_float_value_2", "key44_array_of_mixed_values", "key45_string_value_final", "key46_integer_value_example", "key47_object_with_flags", "key48_large_float_number_2", "key49_simple_string_message", "key50_mixed_type_structure", "key51_large_integer_value_4", "key52_float_value_with_precision", "key53_boolean_flag_example", "key54_array_with_floats_2", "key55_textual_description", "key56_object_with_data", "key57_array_with_integers_3", "key58_random_large_number", "key59_float_number_value_3", "key60_object_with_booleans", "key61_large_integer_value_5", "key62_simple_string_value", "key63_array_with_mixed_types_2", "key64_sample_float_value", "key65_random_boolean_value", "key66_complex_object_with_data", "key67_large_integer_value_6", "key68_text_value_example", "key69_list_of_numbers", "key70_object_with_floats_2", "key71_boolean_true_value_example", "key72_large_integer_example", "key73_string_message_sample", "key74_array_with_strings_2", "key75_object_with_large_numbers", "key76_random_float_value", "key77_text_value_here", "key78_integer_value_final", "key79_array_of_integers_4", "key80_nested_object_example_2", "key81_boolean_true_value_final", "key82_large_float_value_final", "key83_string_text_final", "key84_complex_structure_final", "key85_integer_value_sample", "key86_array_of_mixed_data", "key87_large_number_value_final", "key88_simple_float_value", "key89_text_value_final", "key90_boolean_false_value_final", "key91_complex_object_final", "key92_large_integer_final_value", "key93_array_with_floats_3", "key94_string_final_example", "key95_mixed_type_array_final", "key96_random_large_float", "key97_simple_boolean_false", "key98_object_with_integers", "key99_large_float_value_example", "key100_text_message_example", "jqXw9ZQkHn", "ZtK7vLoMbG", "b4R5uTnVcP", "x7y2zW8tQ3", "pF3kT6wL1j", "vH9qLzM7Xk", "W2mN3lJ4vY", "g8J4kR2hX5", "nY3pQ9lF6t", "j3K6bT7zQ8", "Q1nW8eL7jR", "T9zQ4mX6cV", "Z8kR2fM5nL", "L3yW5uP7xH", "vG9tY2nQ4z", "K7jQ5mL8nR", "H6vN3tX4jL", "n9L8kR6yJ5", "Y2mQ4vZ7kP", "t1P6jW3rQ9", "P4nV8zL6tM", "W7jQ2mR5nL", "L6tX9pQ4rN", "X8rM3yN5tP", "y7L4kQ6zW9", "q1W9rT3mP6", "N2tP4lV6kX", "R8mL5jQ2yW", "v9Z2pT4kL6", "x1N8rQ6tM5", "J3lP7vR9nX", "M4nT9yL6pR", "K6zQ3rN5vL", "q8L2pT7xN5", "T9jQ4mR2lV", "Y7lP5vX3nK", "L8rQ2nT9mP", "p3J6vR7tX4", "X5kR8lQ4nJ", "R3nT6vP9mL", "k4N9jQ2xW7", "n6P8vT5kL3", "G9zQ4mN2yL", "V7tX5pR9kN", "m8L3jP6vR4", "Q2rN7lT5xK", "p9J4kX3rT6", "z1L8qT6vN3", "W6nT3jL9pR", "r2P5vX8lT7", "j9L4qR2tN5", "X7pM6vT4nK", "V2lP9xT3rN", "m6N3qL7tP4", "K8rL5tQ9mX", "R9vP6mT4nL", "z2N4qL8tX3", "n5L9rQ2mT7", "P7xM6vT3nL", "r3J8lQ5tN6", "N4vP2mR9lK", "j8L3tQ6nX5", "Q5nX7pR9mL", "X2rM6vT4jN", "k7N9lQ4tP3", "v4L2qP5nX6", "T3rP8mL7kN", "y9N5lQ2tW4", "n3J6rX7vT2", "X9kL4qT5nP", "P6vM8rT3lK", "R7nL5tQ4mX", "j2P8kT6nL9", "N9rL3qX5tV", "X4vT2mP7nK", "r5L9kQ6tM3", "V6nX4tP2lN", "y8L7qR3nT6", "N3tP9mL4xK", "j7L2rQ6vT5", "P5xM4nT3lK", "R4nL9tQ2mX", "z9L5qP3tN7", "n2P6vX7lT4", "X8rL4tQ9mN", "T6nP2jL3vK", "r4M7qT5nL8", "k3N9lQ6tX7", "y2L5rT8nP4", "N6vP3lT9xK", "X3rL9tQ4mN", "p2J7kT5vL6", "R9nL3qX2tM", "X6vP4tN8jL", "j4L2kQ9tX5", "n7M3pT6vL9", "V9rP5lT8nK", "y4N2qR7tP3", "r8L3kQ6nT9", "Q1mR8pT3nV5x", "L6jQ2lW7kP9z", "K9pN4tX8vR3l", "X3vQ5mN9tL2p", "N7lT2pR6kM4v", "z4M9rT5nX3L2", "j6K7qL3tV8nP", "P5xT4nR2kL9v", "V8lM3pN6tR7x", "y3L6qT9nP5vR", "k2N8rX7tM4pL", "R4mP5vL9tN2x", "T9pL6tX3nV2k", "X7qM8rN4tL6p", "n5K2pT9vR7lM", "V4lN3qT5nP8x", "z9P6mT7rX4L3", "Q2mN5pL8tR9x", "L7jP4tW9kM2v", "K3pN6tX2vR8l", "X9vQ7mN5tL4p", "N4lT9pR3kM6v", "z3M8rT6nX7L4", "j9K5qL2tV7nP", "P2xT7nR4kL9v", "V5lM9pN3tR6x", "y6L7qT8nP2vR", "k8N3rX5tM9pL", "R7mP6vL2tN4x", "T8pL4tX7nV6k", "X2qM9rN6tL3p", "n7K4pT3vR8lM", "V6lN8qT9nP5x", "z5P3mT2rX9L8", "Q4mN7pL6tR2x", "L8jP9tW3kM7v", "K5pN2tX4vR9l", "X6vQ3mN8tL7p", "N3lT4pR7kM2v", "z7M2rT9nX5L6", "j4K9qL6tV2nP", "P9xT3nR8kL7v", "V3lM5pN9tR2x", "y8L2qT7nP6vR", "k9N4rX6tM3pL", "R9mP2vL8tN6x", "T4pL9tX5nV3k", "X5qM4rN7tL9p", "n8K7pT6vR2lM", "V9lN5qT4nP3x", "z8P4", "z8P4mT3rX9L2", "Q7mN8pL5tR6x", "L2jP3tW8kM9v", "K6pN7tX9vR4l", "X4vQ2mN5tL8p", "N9lT6pR3kM7v", "z2M5rT8nX3L9", "j8K4qL7tV6nP", "P6xT9nR4kL2v", "V7lM2pN4tR9x", "y5L8qT3nP9vR", "k3N7rX9tM6pL", "R8mP5vL7tN3x", "T7pL2tX6nV8k", "X9qM3rN4tL5p", "n4K9pT8vR7lM", "V2lN6qT3nP8x", "z6P9mT2rX7L5", "Q8mN4pL3tR7x", "L9jP5tW6kM4v", "K8pN2tX3vR5l", "X7vQ9mN8tL6p", "N5lT7pR9kM3v", "z3M6rT4nX2L8", "j7K8qL9tV3nP", "P3xT6nR5kL9v", "V4lM9pN7tR2x", "y9L6qT5nP2vR", "k5N3rX4tM8pL", "R2mP7vL6tN9x", "T6pL8tX9nV4k", "X2qM5rN7tL6p", "n3K9pT4vR8lM", "V5lN7qT9nP4x", "z7P3mT9rX6L4", "A8pQ2mR5nL9x", "X6vT3kN8lR7p", "B7lM4pQ2tN9x", "Y9nK5rL3tX2p", "C4qP8mR7nL6x", "Z5xT2kN9lR3p", "D6vL4pM2tN7x", "W7nQ9rL3tX2p", "E8mT2pR5nL6x", "F9lK4qN7tX3p", "G2vP8mR6nL9x", "H3nQ5rL2tX7p", "I4lM6pT9nR2x", "J7vK2pN5tL6x", "K8pT3mR4nL9x", "L9xQ6rN2tL5p", "M2vL4pT7nR3x", "N5lK8qP3tX6p", "O7mT2pR9nL4x", "P9lQ3rN8tX5p", "Q2vL6pN4tR7x", "R3nK5pT8lX2p", "S4xQ7rL2nM9x", "T5vL2pN6tR3x", "U6pK9mR4nL2x", "V7lT3pN5tX9x", "W8qL4rM2nX7p", "X9mT2pN6lR3x", "Y5nK8qR4tX2p", "Z6vL3pN9tR5x", "A7pQ8mR2nL4x", "B9lT5pN6rX3x", "C2qL8rN7tX9p", "D4vM3pL6nR2x", "E5lT9pN4rX7x", "F6nK2pR8tL3x", "G7mQ4rN5tX2p", "H8lP3nR6tX9x", "I9vT2pN4lR7x", "J3nK5rL2tX8p", "K4pL7mN9tR2x", "L5xT8rN3pX6x", "M6qL2nR4tX9p", "N7pT3vL6rX2x", "O8mQ4rN5tX7x", "P9lT2pR8nX3x", "Q4vL6pN9tR2x", "R5nK7qT8lX9x", "S6pT2mR4nL3x"]
vlf = [87, [1, 2, 3], "Olá", 12.34, true, {x: 1, y: 2}, nil, 67, ["a", "b", "c"], "Mundo", 53, [7, 8, 9], "Teste", 45.670000000000002, false, {name: "John", age: 30}, nil, 23, ["x", "y", "z"], "Texto", 100, [4, 5, 6], "Exemplo", 78.900000000000006, true, {a: 10, b: 20}, nil, 32, ["1", "2", "3"], "Mensagem", 43, [10, 11, 12], "Olá Mundo", 56.780000000000001, false, {id: 123, value: 456}, nil, 91, ["A", "B", "C"], "Fim", 34, [13, 14, 15], "Teste de String", 89, true, {p: 3.1400000000000001, q: 2.71}, nil, 77, ["Q", "R", "S"], "Final", 23.449999999999999, false, {lat: 40.712800000000001, long: -74.006}, nil, 29, ["dog", "cat", "fish"], "Nova York", 81, [16, 17, 18], "Teste de Código", 98.760000000000005, true, {r: 5, g: 10, b: 15}, nil, 52, ["L", "M", "N"], "JSON", 65, [19, 20, 21], "Exemplo de JSON", 102.34, false, {width: 100, height: 200}, nil, 45, ["X", "Y", "Z"], "Chave Final", 87.650000000000006, true, {a: 1, b: 2}, nil, 63, ["D", "E", "F"], "Texto Final", 33, [22, 23, 24], "Final do Exemplo", 111.22, false, {pi: 3.1415000000000002, e: 2.718}, nil, 77, ["AA", "BB", "CC"], "String Final", 49, [25, 26, 27], "Fim do Exemplo", 120.45, true, {x1: 5, y1: 10}, 987, [1, 3, 5, 7, 9], "Hello World", 98.760000000000005, true, {a: 100, b: 200}, 123456789, ["apple", "banana", "cherry"], "Welcome to JSON", {name: "Test", data: [1, 2, 3]}, false, 345.6789, [42, "Answer", true, 3.1400000000000001], "Goodbye", [10, 20, 30, 40], {x: 5, y: 10, z: 15}, true, "Random Text", 987654321, [2.71, 3.1400000000000001, 1.6180000000000001], "This is a test JSON object", [false, true, false], 123.456789, [100, 200, 300, 400], {first: "John", last: "Doe"}, false, 1122334455, {id: 789, values: [10, 20, 30]}, [99, "Ninety-Nine", false], "Sample Text", 432.10000000000002, true, 9988776655, ["one", "two", "three"], {pi: 3.1415000000000002, e: 2.718}, 123123123, ["X", "Y", "Z"], "Hello Again", {a: 1000, b: 2000}, [3, 6, 9], true, {alpha: 1, beta: 2}, 765.43209999999999, [false, 123, "End"], "Final String", 7890, {isActive: true, isVerified: false}, 567.89009999999996, "Final Message", {x: 10, y: "Ten", z: false}, 2233445566, 654.32100000000003, true, [1.234, 5.6779999999999999, 9.1011000000000006], "This is an example", {keyA: "A", keyB: "B", keyC: "C"}, [8, 16, 32], 3344556677, 210.98759999999999, {truthy: true, falsy: false}, 4455667788, "Just a String", [7, "Seven", true], 890.12339999999995, false, {id: 321, label: "Item"}, 9988776655, "Example Text", [1, 4, 7, 10], {min: 0.10000000000000001, max: 10.1}, true, 87654321, "Sample Message", ["alpha", "beta", "gamma"], {numberA: 1000000, numberB: 2000000}, 345.1234, "Hello JSON", 4321, [11, 22, 33, 44], {key1: 101, key2: 202}, true, 654.78899999999999, "Last String", {param1: 50, param2: 100}, 9876, [false, "False", 0], 12121212, 123.45, "Final Text Value", false, {id: 999, status: "Active"}, 654321, [9.8759999999999994, 5.4320000000000004, 1.234], "End of JSON", [10, "Ten", true], 987.65430000000003, false, {count1: 10, count2: 20}, 876.54319999999996, "Final Example", 42, [3.1400000000000001, 2.718, 1.6180000000000001], "Random String", [false, true, false], {x: 100, y: 200}, 987654321, ["alpha", "beta", "gamma"], "Another String", 123.456, [1, 2, 3, 4, 5], {a: true, b: false}, "Hello World", 4321, [99, 88, 77], 654.32100000000003, {id: 999, value: "test"}, true, [10, 20, 30], 345.678, {key: "value", data: [1, 2, 3]}, "Sample Text", 987.654, {alpha: "A", beta: "B"}, [false, "true", 123], "JSON Example", 87654321, [5, 10, 15], {count: 10, total: 100}, "Another Example", 345.12299999999999, [0.10000000000000001, 0.20000000000000001, 0.29999999999999999], "Test String", {truth: true, lie: false}, 999999, [42, "Answer", true], "Final Message", 102.345, {key1: "A", key2: "B"}, 7890, "End of JSON", [7, 14, 21], {item: 123, label: "item"}, 567.88999999999999, "Example Value", {first: "John", last: "Doe"}, 112233, [3.1400000000000001, "pi", false], "Complex JSON", 234567, {nested: {a: 1, b: 2}}, 789.12300000000005, "Sample Key", 345678, {id: 10, active: true}, [10, 20, 30, 40], "Another Key", 654321, {level: 1, score: 100}, 876.54300000000001, "Final Example", [11, 22, 33], {a: true, b: false, c: true}, 567890, "Test Message", {alpha: "A", beta: "B", gamma: "C"}, 765.43200000000002, [8, 16, 24, 32], "Complex Object", {id: 555, status: "active"}, 321.98700000000002, "Final String", [5.4320000000000004, 1.234, 9.8759999999999994], {x: 10, y: 20, z: 30}, 234.56700000000001, "Another String", [15, 25, 35], {count: 100, total: 1000}, 999.88800000000003, "End of JSON", {truthy: true, falsy: false}, 87654321, "Another Key", [101, 202, 303], {alpha: "A", beta: "B", gamma: "C"}, 123456, "Sample JSON", [11.109999999999999, 22.219999999999999, 33.329999999999998], {x: 50, y: 60, z: 70}, 789012, "Final Key", [13, 26, 39], {a: 1, b: 2, c: 3}, 987654, "Test Key", [12, 24, 36], {count: 20, value: 200}, 678.90099999999995, "Sample Key", {id: 101, status: "done"}, [25, 50, 75], "Some Random String", 123456789, {name: "John", age: 30}, [true, false, true], 456.78899999999999, "Another Random String", {height: 180, weight: 75}, [10.1, 20.199999999999999, 30.300000000000001], 789012345, "Yet Another String", {score: 95, grade: "A"}, [5, 10, 15], 654321987, {x: 3, y: 6, z: 9}, [1.1000000000000001, 2.2000000000000002, 3.2999999999999998], "Another Example String", 321654987, {alpha: "X", beta: "Y", gamma: "Z"}, 987654321, {key: "value", id: 789}, [true, false, true, false], 123.456, "String Value Example", {width: 1920, height: 1080}, [100, 200, 300], 456789123, "Sample String", {name: "Alice", score: 85}, [20.199999999999999, 40.399999999999999, 60.600000000000001], 321987654, {year: 2024, month: "August"}, [15, 30, 45], "Another Random String Value", 654789321, {product: "Laptop", price: 1500}, 987321654, {id: 456, status: "active"}, [true, false, true, true], 234.56700000000001, "Different String Value", {resolution: "4K", fps: 60}, [150, 300, 450], 987123456, "Text String Example", {temperature: 25, humidity: 60}, [5.5, 10.1, 15.15], 123789456, {make: "Ford", model: "Mustang"}, [2.2000000000000002, 4.4000000000000004, 6.5999999999999996], -5215.1229999999996, "A complex string", 567891234, {planet: "Earth", continent: "Asia"}, 456123789, {code: 200, message: "OK"}, [true, true, false, false], 678.90099999999995, "Final Test String", {OS: "Linux", version: "5.15"}, [1.01, 2.02, 3.0299999999999998], 345678912, "More Random Strings", {shape: "circle", color: "blue"}, [9, 18, 27], 456789123, {engine: "V8", horsepower: 500}, [8.8800000000000008, 9.9900000000000002, 10.1], "Final Complex String", 567123890, {building: "Skyscraper", floors: 50}, 123654789, {altitude: 10000, speed: 850}, [true, false, true, false, true], 890.12300000000005, "Ultimate Random String", {weight: 70, height: 175}, [12.34, 23.449999999999999, 34.560000000000002], 789654123, "Another Final String", {memory: "16GB", storage: "512GB"}, [33, 66, 99], 234567891, {series: "300", model: "XPS"}, [0.123, 0.45600000000000002, 0.78900000000000003], "The Last Random String", [15, 30, 45], "Sample Text String", {color: "red", size: "medium"}, 234567890, [3.1400000000000001, 2.71, 1.6200000000000001], "Another Random Value", {language: "Python", version: "3.10"}, [101, 202, 303], "Random String Example", {city: "New York", population: 8419000}, [10.1, 20.199999999999999, 30.300000000000001], "Text with different values", {brand: "Sony", model: "WH-1000XM4"}, [0.001, 0.002, 0.0030000000000000001], "Example with unique values", {type: "SUV", make: "Toyota"}, [99, 88, 77], "String with varied length", {degree: "Master's", field: "Computer Science"}, [56.780000000000001, 90.120000000000005, 34.560000000000002], "Randomly generated text", {server: "Apache", status: "running"}, [777, 888, 999], "Another example string", {planet: "Mars", mission: "Curiosity"}, [1, 2, 3, 4, 5], "Variety in text values", {company: "Google", service: "Cloud"}, [333.44, 555.65999999999997, 777.88], "Example with longer text", {model: "iPhone", version: "13 Pro"}, [4.5599999999999996, 7.8899999999999997, 1.23], "Textual data example", {country: "Germany", currency: "Euro"}, [12, 34, 56, 78], "Complex text string", {software: "VS Code", license: "MIT"}, [0.10000000000000001, 0.20000000000000001, 0.29999999999999999], "More random examples", {book: "1984", author: "George Orwell"}, [1000, 2000, 3000], "Extended text string", {game: "Chess", level: "Beginner"}, [111.22, 333.44, 555.65999999999997], "Example string with different values", {subject: "Mathematics", grade: "A+"}, [22, 33, 44], "Final example string", {category: "Electronics", item: "Headphones"}]

assert(Frame.keys(large_frame) == klf, "frame error: the keys in the large_frame are invalid")
assert(Frame.values(large_frame) == vlf, "frame error: the values in the large_frame are invalid")

fun remove_all_items(current, pos) do
    if(Frame.is_empty(current)) do
        current
    else
        remove_all_items(Frame.remove(current, List.at(klf, pos)), pos + 1)
    end
end

assert(Frame.is_empty(remove_all_items(large_frame, 0)), "frame error: the result of remove_all_items is not empty")

print("Large Frame done!")
