## 10 nested lamdas with same var

fun get_nested_lambda() do
    lambda (a1) do
        lambda (a2) do
            lambda (a3) do
                lambda (a4) do
                    lambda (a5) do
                        lambda (a6) do
                            lambda (a7) do
                                lambda (a8) do
                                    lambda (a9) do
                                        lambda (a10) do
                                            a1 ++ ' ' ++ a2 ++ ' ' ++ a3 ++ ' ' ++ a4 ++ ' ' ++ a5 ++ ' ' ++ a6 ++ ' ' ++ a7 ++ ' ' ++ a8 ++ ' ' ++ a9 ++ ' ' ++ a10
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

res = get_nested_lambda()
res = res('Nested')
res = res('Lambdas')
res = res('in')
res = res('a')
res = res('chain')
res = res('of')
res = res('functions')
res = res('that')
res = res('return')
res = res('!!')

assert(res == 'Nested Lambdas in a chain of functions that return !!', 'fail to mount nested lamdas!')

## 50 nested lambdas test

fun get_nested_lambda() do
    lambda (a1) do
        lambda (a2) do
            lambda (a3) do
                lambda (a4) do
                    lambda (a5) do
                        lambda (a6) do
                            lambda (a7) do
                                lambda (a8) do
                                    lambda (a9) do
                                        lambda (a10) do
                                            lambda (a11) do
                                                lambda (a12) do
                                                    lambda (a13) do
                                                        lambda (a14) do
                                                            lambda (a15) do
                                                                lambda (a16) do
                                                                    lambda (a17) do
                                                                        lambda (a18) do
                                                                            lambda (a19) do
                                                                                lambda (a20) do
                                                                                    lambda (a21) do
                                                                                        lambda (a22) do
                                                                                            lambda (a23) do
                                                                                                lambda (a24) do
                                                                                                    lambda (a25) do
                                                                                                        lambda (a26) do
                                                                                                            lambda (a27) do
                                                                                                                lambda (a28) do
                                                                                                                    lambda (a29) do
                                                                                                                        lambda (a30) do
                                                                                                                            lambda (a31) do
                                                                                                                                lambda (a32) do
                                                                                                                                    lambda (a33) do
                                                                                                                                        lambda (a34) do
                                                                                                                                            lambda (a35) do
                                                                                                                                                lambda (a36) do
                                                                                                                                                    lambda (a37) do
                                                                                                                                                        lambda (a38) do
                                                                                                                                                            lambda (a39) do
                                                                                                                                                                lambda (a40) do
                                                                                                                                                                    lambda (a41) do
                                                                                                                                                                        lambda (a42) do
                                                                                                                                                                            lambda (a43) do
                                                                                                                                                                                lambda (a44) do
                                                                                                                                                                                    lambda (a45) do
                                                                                                                                                                                        lambda (a46) do
                                                                                                                                                                                            lambda (a47) do
                                                                                                                                                                                                lambda (a48) do
                                                                                                                                                                                                    lambda (a49) do
                                                                                                                                                                                                        lambda (a50) do
                                                                                                                                                                                                            a1 ++ ' ' ++ a2 ++ ' ' ++ a3 ++ ' ' ++ a4 ++ ' ' ++ a5 ++ ' ' ++ a6 ++ ' ' ++ a7 ++ ' ' ++ a8 ++ ' ' ++ a9 ++ ' ' ++ a10 ++ ' ' ++ a11 ++ ' ' ++ a12 ++ ' ' ++ a13 ++ ' ' ++ a14 ++ ' ' ++ a15 ++ ' ' ++ a16 ++ ' ' ++ a17 ++ ' ' ++ a18 ++ ' ' ++ a19 ++ ' ' ++ a20 ++ ' ' ++ a21 ++ ' ' ++ a22 ++ ' ' ++ a23 ++ ' ' ++ a24 ++ ' ' ++ a25 ++ ' ' ++ a26 ++ ' ' ++ a27 ++ ' ' ++ a28 ++ ' ' ++ a29 ++ ' ' ++ a30 ++ ' ' ++ a31 ++ ' ' ++ a32 ++ ' ' ++ a33 ++ ' ' ++ a34 ++ ' ' ++ a35 ++ ' ' ++ a36 ++ ' ' ++ a37 ++ ' ' ++ a38 ++ ' ' ++ a39 ++ ' ' ++ a40 ++ ' ' ++ a41 ++ ' ' ++ a42 ++ ' ' ++ a43 ++ ' ' ++ a44 ++ ' ' ++ a45 ++ ' ' ++ a46 ++ ' ' ++ a47 ++ ' ' ++ a48 ++ ' ' ++ a49 ++ ' ' ++ a50
                                                                                                                                                                                                        end
                                                                                                                                                                                                    end
                                                                                                                                                                                                end
                                                                                                                                                                                            end
                                                                                                                                                                                        end
                                                                                                                                                                                    end
                                                                                                                                                                                end
                                                                                                                                                                            end
                                                                                                                                                                        end
                                                                                                                                                                    end
                                                                                                                                                                end
                                                                                                                                                            end
                                                                                                                                                        end
                                                                                                                                                    end
                                                                                                                                                end
                                                                                                                                            end
                                                                                                                                        end
                                                                                                                                    end
                                                                                                                                end
                                                                                                                            end
                                                                                                                        end
                                                                                                                    end
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

al = get_nested_lambda()

a2 = al('Nested')
a3 = a2('Lambdas')
a4 = a3('in')
a5 = a4('a')
a6 = a5('chain')
a7 = a6('of')
a8 = a7('functions')
a9 = a8('that')
a10 = a9('return')
a11 = a10('other')
a12 = a11('lambdas')
a13 = a12('until')
a14 = a13('the')
a15 = a14('final')
a16 = a15('step')
a17 = a16('combines')
a18 = a17('all')
a19 = a18('the')
a20 = a19('arguments')
a21 = a20('into')
a22 = a21('one')
a23 = a22('string')
a24 = a23('to')
a25 = a24('be')
a26 = a25('printed')
a27 = a26('out')
a28 = a27('successfully')
a29 = a28('at')
a30 = a29('the')
a31 = a30('end')
a32 = a31('of')
a33 = a32('the')
a34 = a33('process')
a35 = a34('using')
a36 = a35('a')
a37 = a36('deep')
a38 = a37('chain')
a39 = a38('of')
a40 = a39('lambdas')
a41 = a40('to')
a42 = a41('combine')
a43 = a42('all')
a44 = a43('inputs')
a45 = a44('from')
a46 = a45('the')
a47 = a46('start')
a48 = a47('to')
a49 = a48('the')
a50 = a49('finish')
a50 = a50('!!')

expected = "Nested Lambdas in a chain of functions that return other lambdas until the final step combines all the arguments into one string to be printed out successfully at the end of the process using a deep chain of lambdas to combine all inputs from the start to the finish !!"

assert(a50 == expected, 'fail to mount nested lamdas!')

print("nested lambda's done!")
